# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rpc.mt.user import user_pb2 as user_dot_user__pb2


class ServiceStub(object):
    """User通指买家, 即app端用户, 卖家会用mall来表示
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/ptuser.Service/Login',
                request_serializer=user_dot_user__pb2.LoginArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.TokenResp.FromString,
                )
        self.RefreshToken = channel.unary_unary(
                '/ptuser.Service/RefreshToken',
                request_serializer=user_dot_user__pb2.RefreshTokenArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.TokenResp.FromString,
                )
        self.UserByToken = channel.unary_unary(
                '/ptuser.Service/UserByToken',
                request_serializer=user_dot_user__pb2.UserByTokenArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UserByTokenResp.FromString,
                )
        self.UserById = channel.unary_unary(
                '/ptuser.Service/UserById',
                request_serializer=user_dot_user__pb2.UserByIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UserByIdResp.FromString,
                )
        self.UpdateMobile = channel.unary_unary(
                '/ptuser.Service/UpdateMobile',
                request_serializer=user_dot_user__pb2.UpdateMobileArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateMobileResp.FromString,
                )
        self.UpdateMobileWithoutVerify = channel.unary_unary(
                '/ptuser.Service/UpdateMobileWithoutVerify',
                request_serializer=user_dot_user__pb2.UpdateMobileWithoutVerifyArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateMobileWithoutVerifyResp.FromString,
                )
        self.UpdateMobileFromInternalAccount = channel.unary_unary(
                '/ptuser.Service/UpdateMobileFromInternalAccount',
                request_serializer=user_dot_user__pb2.UpdateMobileFromInternalAccountArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateMobileFromInternalAccountResp.FromString,
                )
        self.GenerateMobilecode = channel.unary_unary(
                '/ptuser.Service/GenerateMobilecode',
                request_serializer=user_dot_user__pb2.GenerateMobilecodeArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GenerateMobilecodeResp.FromString,
                )
        self.VerifyMobilecodeOldPhone = channel.unary_unary(
                '/ptuser.Service/VerifyMobilecodeOldPhone',
                request_serializer=user_dot_user__pb2.VerifyMobilecodeArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.VerifyMobilecodeResp.FromString,
                )
        self.Bind = channel.unary_unary(
                '/ptuser.Service/Bind',
                request_serializer=user_dot_user__pb2.BindArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BindResp.FromString,
                )
        self.Unbind = channel.unary_unary(
                '/ptuser.Service/Unbind',
                request_serializer=user_dot_user__pb2.UnbindArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UnbindResp.FromString,
                )
        self.GetBindStatus = channel.unary_unary(
                '/ptuser.Service/GetBindStatus',
                request_serializer=user_dot_user__pb2.GetBindStatusArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetBindStatusResp.FromString,
                )
        self.CheckMpOpenid = channel.unary_unary(
                '/ptuser.Service/CheckMpOpenid',
                request_serializer=user_dot_user__pb2.CheckMpOpenidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CheckMpOpenidResp.FromString,
                )
        self.GetMopenid = channel.unary_unary(
                '/ptuser.Service/GetMopenid',
                request_serializer=user_dot_user__pb2.GetMopenidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetMopenidResp.FromString,
                )
        self.GetUidByMopenid = channel.unary_unary(
                '/ptuser.Service/GetUidByMopenid',
                request_serializer=user_dot_user__pb2.GetUidByMopenidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUidByMopenidResp.FromString,
                )
        self.SubmitFormId = channel.unary_unary(
                '/ptuser.Service/SubmitFormId',
                request_serializer=user_dot_user__pb2.SubmitFormIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.SubmitFormIdResp.FromString,
                )
        self.CancelAccount = channel.unary_unary(
                '/ptuser.Service/CancelAccount',
                request_serializer=user_dot_user__pb2.CancelAccountArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CancelAccountResp.FromString,
                )
        self.RecoverAccount = channel.unary_unary(
                '/ptuser.Service/RecoverAccount',
                request_serializer=user_dot_user__pb2.RecoverAccountArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RecoverAccountResp.FromString,
                )
        self.FirstLoginStats = channel.unary_unary(
                '/ptuser.Service/FirstLoginStats',
                request_serializer=user_dot_user__pb2.FirstLoginStatsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.FirstLoginStatsResp.FromString,
                )
        self.QttFarmBindAccount = channel.unary_unary(
                '/ptuser.Service/QttFarmBindAccount',
                request_serializer=user_dot_user__pb2.QttFarmBindAccountArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.QttFarmBindAccountResp.FromString,
                )
        self.GetProfile = channel.unary_unary(
                '/ptuser.Service/GetProfile',
                request_serializer=user_dot_user__pb2.GetProfileArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.Profile.FromString,
                )
        self.UpdateProfileNickname = channel.unary_unary(
                '/ptuser.Service/UpdateProfileNickname',
                request_serializer=user_dot_user__pb2.UpdateProfileNicknameArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateProfileNicknameResp.FromString,
                )
        self.UpdateProfileAvatar = channel.unary_unary(
                '/ptuser.Service/UpdateProfileAvatar',
                request_serializer=user_dot_user__pb2.UpdateProfileAvatarArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateProfileAvatarResp.FromString,
                )
        self.UpdateProfileGender = channel.unary_unary(
                '/ptuser.Service/UpdateProfileGender',
                request_serializer=user_dot_user__pb2.UpdateProfileGenderArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateProfileGenderResp.FromString,
                )
        self.UpdateProfileBirthday = channel.unary_unary(
                '/ptuser.Service/UpdateProfileBirthday',
                request_serializer=user_dot_user__pb2.UpdateProfileBirthdayArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateProfileBirthdayResp.FromString,
                )
        self.UpdateProfileSignature = channel.unary_unary(
                '/ptuser.Service/UpdateProfileSignature',
                request_serializer=user_dot_user__pb2.UpdateProfileSignatureArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateProfileSignatureResp.FromString,
                )
        self.UpdateProfileLocation = channel.unary_unary(
                '/ptuser.Service/UpdateProfileLocation',
                request_serializer=user_dot_user__pb2.UpdateProfileLocationArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateProfileLocationResp.FromString,
                )
        self.GetWechatOpenid = channel.unary_unary(
                '/ptuser.Service/GetWechatOpenid',
                request_serializer=user_dot_user__pb2.GetWechatOpenidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetWechatOpenidResp.FromString,
                )
        self.GetWechatOpenidByCode = channel.unary_unary(
                '/ptuser.Service/GetWechatOpenidByCode',
                request_serializer=user_dot_user__pb2.GetWechatOpenidByCodeArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetWechatOpenidByCodeResp.FromString,
                )
        self.CheckMPSubscribed = channel.unary_unary(
                '/ptuser.Service/CheckMPSubscribed',
                request_serializer=user_dot_user__pb2.CheckMPSubscribedArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CheckMPSubscribedResp.FromString,
                )
        self.SetMPSubscribed = channel.unary_unary(
                '/ptuser.Service/SetMPSubscribed',
                request_serializer=user_dot_user__pb2.SetMPSubscribedArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.SetMPSubscribedResp.FromString,
                )
        self.GetQttMemberId = channel.unary_unary(
                '/ptuser.Service/GetQttMemberId',
                request_serializer=user_dot_user__pb2.GetQttMemberIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetQttMemberIdResp.FromString,
                )
        self.GetBuyerIdFromQttToken = channel.unary_unary(
                '/ptuser.Service/GetBuyerIdFromQttToken',
                request_serializer=user_dot_user__pb2.GetBuyerIdFromQttTokenArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetBuyerIdFromQttTokenResp.FromString,
                )
        self.GetQttInfo = channel.unary_unary(
                '/ptuser.Service/GetQttInfo',
                request_serializer=user_dot_user__pb2.GetQttInfoArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetQttInfoResp.FromString,
                )
        self.GetAddresses = channel.unary_unary(
                '/ptuser.Service/GetAddresses',
                request_serializer=user_dot_user__pb2.GetAddressesArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.Addresses.FromString,
                )
        self.GetAddress = channel.unary_unary(
                '/ptuser.Service/GetAddress',
                request_serializer=user_dot_user__pb2.AddressIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.Address.FromString,
                )
        self.GetDefaultOrFirstAddress = channel.unary_unary(
                '/ptuser.Service/GetDefaultOrFirstAddress',
                request_serializer=user_dot_user__pb2.GetDefaultOrFirstAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.Address.FromString,
                )
        self.CreateAddress = channel.unary_unary(
                '/ptuser.Service/CreateAddress',
                request_serializer=user_dot_user__pb2.CreateAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CreateAddressResp.FromString,
                )
        self.UpdateAddress = channel.unary_unary(
                '/ptuser.Service/UpdateAddress',
                request_serializer=user_dot_user__pb2.UpdateAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateAddressResp.FromString,
                )
        self.DeleteAddress = channel.unary_unary(
                '/ptuser.Service/DeleteAddress',
                request_serializer=user_dot_user__pb2.DeleteAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.DeleteAddressResp.FromString,
                )
        self.SetAddressDefault = channel.unary_unary(
                '/ptuser.Service/SetAddressDefault',
                request_serializer=user_dot_user__pb2.SetAddressDefaultArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.SetAddressDefaultResp.FromString,
                )
        self.MirgateAddress = channel.unary_unary(
                '/ptuser.Service/MirgateAddress',
                request_serializer=user_dot_user__pb2.MirgateAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.MirgateAddressResp.FromString,
                )
        self.GetFavoriteGoods = channel.unary_unary(
                '/ptuser.Service/GetFavoriteGoods',
                request_serializer=user_dot_user__pb2.GetFavoriteGoodsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.FavoriteGoodsResp.FromString,
                )
        self.GetAllFavoriteGoods = channel.unary_unary(
                '/ptuser.Service/GetAllFavoriteGoods',
                request_serializer=user_dot_user__pb2.GetAllFavoriteGoodsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetAllFavoriteGoodsResp.FromString,
                )
        self.AddFavoriteGoods = channel.unary_unary(
                '/ptuser.Service/AddFavoriteGoods',
                request_serializer=user_dot_user__pb2.AddFavoriteGoodsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.AddFavoriteGoodsResp.FromString,
                )
        self.BatchAddFavoriteGoods = channel.unary_unary(
                '/ptuser.Service/BatchAddFavoriteGoods',
                request_serializer=user_dot_user__pb2.BatchAddFavoriteGoodsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BatchAddFavoriteGoodsResp.FromString,
                )
        self.RemoveFavoriteGoods = channel.unary_unary(
                '/ptuser.Service/RemoveFavoriteGoods',
                request_serializer=user_dot_user__pb2.RemoveFavoriteGoodsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RemoveFavoriteGoodsResp.FromString,
                )
        self.GetFavoriteMall = channel.unary_unary(
                '/ptuser.Service/GetFavoriteMall',
                request_serializer=user_dot_user__pb2.GetFavoriteMallArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.FavoriteMallResp.FromString,
                )
        self.GetAllFavoriteMall = channel.unary_unary(
                '/ptuser.Service/GetAllFavoriteMall',
                request_serializer=user_dot_user__pb2.GetAllFavoriteMallArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetAllFavoriteMallResp.FromString,
                )
        self.AddFavoriteMall = channel.unary_unary(
                '/ptuser.Service/AddFavoriteMall',
                request_serializer=user_dot_user__pb2.AddFavoriteMallArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.AddFavoriteMallResp.FromString,
                )
        self.RemoveFavoriteMall = channel.unary_unary(
                '/ptuser.Service/RemoveFavoriteMall',
                request_serializer=user_dot_user__pb2.RemoveFavoriteMallArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RemoveFavoriteMallResp.FromString,
                )
        self.GetMall = channel.unary_unary(
                '/ptuser.Service/GetMall',
                request_serializer=user_dot_user__pb2.GetMallArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.Mall.FromString,
                )
        self.GetCategory = channel.unary_unary(
                '/ptuser.Service/GetCategory',
                request_serializer=user_dot_user__pb2.GetCategoryArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetCategoryResp.FromString,
                )
        self.GetMallDetail = channel.unary_unary(
                '/ptuser.Service/GetMallDetail',
                request_serializer=user_dot_user__pb2.GetMallDetailArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetMallDetailResp.FromString,
                )
        self.RefreshMallDetail = channel.unary_unary(
                '/ptuser.Service/RefreshMallDetail',
                request_serializer=user_dot_user__pb2.RefreshMallDetailReq.SerializeToString,
                response_deserializer=user_dot_user__pb2.RefreshMallDetailResp.FromString,
                )
        self.RefreshGetMall = channel.unary_unary(
                '/ptuser.Service/RefreshGetMall',
                request_serializer=user_dot_user__pb2.RefreshGetMallReq.SerializeToString,
                response_deserializer=user_dot_user__pb2.RefreshGetMallResp.FromString,
                )
        self.GetMallCategoryGoodsIds = channel.unary_unary(
                '/ptuser.Service/GetMallCategoryGoodsIds',
                request_serializer=user_dot_user__pb2.GetMallCategoryGoodsIdsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetMallCategoryGoodsIdsResp.FromString,
                )
        self.GetRefundAddress = channel.unary_unary(
                '/ptuser.Service/GetRefundAddress',
                request_serializer=user_dot_user__pb2.GetRefundAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RefundAddress.FromString,
                )
        self.GetDefaultOrFirstRefundAddress = channel.unary_unary(
                '/ptuser.Service/GetDefaultOrFirstRefundAddress',
                request_serializer=user_dot_user__pb2.GetDefaultOrFirstRefundAddressArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RefundAddress.FromString,
                )
        self.GetMallList = channel.unary_unary(
                '/ptuser.Service/GetMallList',
                request_serializer=user_dot_user__pb2.GetMallListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetMallListResp.FromString,
                )
        self.GetAllSelfSupportMallIds = channel.unary_unary(
                '/ptuser.Service/GetAllSelfSupportMallIds',
                request_serializer=user_dot_user__pb2.GetAllSelfSupportMallIdsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetAllSelfSupportMallIdsResp.FromString,
                )
        self.GetGoodMallIds = channel.unary_unary(
                '/ptuser.Service/GetGoodMallIds',
                request_serializer=user_dot_user__pb2.GetGoodMallIdsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetGoodMallIdsResp.FromString,
                )
        self.BulkMallDetail = channel.unary_unary(
                '/ptuser.Service/BulkMallDetail',
                request_serializer=user_dot_user__pb2.BulkMallDetailArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BulkMallDetailResp.FromString,
                )
        self.GetGoodMallList = channel.unary_unary(
                '/ptuser.Service/GetGoodMallList',
                request_serializer=user_dot_user__pb2.GetGoodMallListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetGoodMallListResp.FromString,
                )
        self.GetMallBrandLicense = channel.unary_unary(
                '/ptuser.Service/GetMallBrandLicense',
                request_serializer=user_dot_user__pb2.GetMallBrandLicenseArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetMallBrandLicenseResp.FromString,
                )
        self.BulkMallLogo = channel.unary_unary(
                '/ptuser.Service/BulkMallLogo',
                request_serializer=user_dot_user__pb2.BulkMallLogoArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BulkMallLogoResp.FromString,
                )
        self.BulkMallQuickRefund = channel.unary_unary(
                '/ptuser.Service/BulkMallQuickRefund',
                request_serializer=user_dot_user__pb2.BulkMallQuickRefundArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BulkMallQuickRefundResp.FromString,
                )
        self.RegisterDevice = channel.unary_unary(
                '/ptuser.Service/RegisterDevice',
                request_serializer=user_dot_user__pb2.RegisterDeviceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RegisterDeviceResp.FromString,
                )
        self.DeviceIdCorrect = channel.unary_unary(
                '/ptuser.Service/DeviceIdCorrect',
                request_serializer=user_dot_user__pb2.DeviceIdCorrectArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.DeviceIdCorrectResp.FromString,
                )
        self.BindDeviceBuyer = channel.unary_unary(
                '/ptuser.Service/BindDeviceBuyer',
                request_serializer=user_dot_user__pb2.BindDeviceBuyerArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BindDeviceBuyerResp.FromString,
                )
        self.HasBindDevice = channel.unary_unary(
                '/ptuser.Service/HasBindDevice',
                request_serializer=user_dot_user__pb2.HasBindDeviceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.HasBindDeviceResp.FromString,
                )
        self.HasBindDevice4Tuid = channel.unary_unary(
                '/ptuser.Service/HasBindDevice4Tuid',
                request_serializer=user_dot_user__pb2.HasBindDevice4TuidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.HasBindDevice4TuidResp.FromString,
                )
        self.GetFirstDevice = channel.unary_unary(
                '/ptuser.Service/GetFirstDevice',
                request_serializer=user_dot_user__pb2.GetFirstDeviceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetFirstDeviceResp.FromString,
                )
        self.PopulateDeviceSource = channel.unary_unary(
                '/ptuser.Service/PopulateDeviceSource',
                request_serializer=user_dot_user__pb2.PopulateDeviceSourceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.PopulateDeviceSourceResp.FromString,
                )
        self.PopulateDeviceImei = channel.unary_unary(
                '/ptuser.Service/PopulateDeviceImei',
                request_serializer=user_dot_user__pb2.PopulateDeviceImeiArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.PopulateDeviceImeiResp.FromString,
                )
        self.PopulateDeviceIdSupplier = channel.unary_unary(
                '/ptuser.Service/PopulateDeviceIdSupplier',
                request_serializer=user_dot_user__pb2.PopulateDeviceIdSupplierArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.PopulateDeviceIdSupplierResp.FromString,
                )
        self.PopulateDeviceDtu = channel.unary_unary(
                '/ptuser.Service/PopulateDeviceDtu',
                request_serializer=user_dot_user__pb2.PopulateDeviceDtuArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.PopulateDeviceDtuResp.FromString,
                )
        self.GetDeviceInfo = channel.unary_unary(
                '/ptuser.Service/GetDeviceInfo',
                request_serializer=user_dot_user__pb2.GetDeviceInfoArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetDeviceInfoResp.FromString,
                )
        self.GetDeviceSource = channel.unary_unary(
                '/ptuser.Service/GetDeviceSource',
                request_serializer=user_dot_user__pb2.GetDeviceSourceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetDeviceSourceResp.FromString,
                )
        self.GetDtuByDevice = channel.unary_unary(
                '/ptuser.Service/GetDtuByDevice',
                request_serializer=user_dot_user__pb2.GetDtuByDeviceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetDtuByDeviceResp.FromString,
                )
        self.GetCidByTk = channel.unary_unary(
                '/ptuser.Service/GetCidByTk',
                request_serializer=user_dot_user__pb2.GetCidByTkArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetCidByTkResp.FromString,
                )
        self.BulkBuyerAvatar = channel.unary_unary(
                '/ptuser.Service/BulkBuyerAvatar',
                request_serializer=user_dot_user__pb2.BulkUserAvatarArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BulkUserAvatarResp.FromString,
                )
        self.GetRobots = channel.unary_unary(
                '/ptuser.Service/GetRobots',
                request_serializer=user_dot_user__pb2.GetRobotArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetRobotResp.FromString,
                )
        self.GetSimpleRobots = channel.unary_unary(
                '/ptuser.Service/GetSimpleRobots',
                request_serializer=user_dot_user__pb2.GetSimpleRobotsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetSimpleRobotsResp.FromString,
                )
        self.GetRobotById = channel.unary_unary(
                '/ptuser.Service/GetRobotById',
                request_serializer=user_dot_user__pb2.GetRobotByIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetRobotByIdResp.FromString,
                )
        self.GetRobotsAvatar = channel.unary_unary(
                '/ptuser.Service/GetRobotsAvatar',
                request_serializer=user_dot_user__pb2.GetRobotsAvatarArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetRobotsAvatarResp.FromString,
                )
        self.PurgeBuyer = channel.unary_unary(
                '/ptuser.Service/PurgeBuyer',
                request_serializer=user_dot_user__pb2.PurgeBuyerArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.PurgeBuyerResp.FromString,
                )
        self.AdminPurgeBuyer = channel.unary_unary(
                '/ptuser.Service/AdminPurgeBuyer',
                request_serializer=user_dot_user__pb2.AdminPurgeBuyerArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.AdminPurgeBuyerResp.FromString,
                )
        self.AdminGetPurgeBuyer = channel.unary_unary(
                '/ptuser.Service/AdminGetPurgeBuyer',
                request_serializer=user_dot_user__pb2.AdminGetPurgeBuyerArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.AdminGetPurgeBuyerResp.FromString,
                )
        self.GetRegionsById = channel.unary_unary(
                '/ptuser.Service/GetRegionsById',
                request_serializer=user_dot_user__pb2.GetRegionsByIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetRegionsByIdResp.FromString,
                )
        self.GetProvinceCityById = channel.unary_unary(
                '/ptuser.Service/GetProvinceCityById',
                request_serializer=user_dot_user__pb2.GetProvinceCityByIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetProvinceCityByIdResp.FromString,
                )
        self.GetBindDeviceInfo = channel.unary_unary(
                '/ptuser.Service/GetBindDeviceInfo',
                request_serializer=user_dot_user__pb2.GetBindDeviceInfoArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetBindDeviceInfoResp.FromString,
                )
        self.BindDeviceTag = channel.unary_unary(
                '/ptuser.Service/BindDeviceTag',
                request_serializer=user_dot_user__pb2.BindDeviceTagArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BindDeviceTagResp.FromString,
                )
        self.BindBuyerTag = channel.unary_unary(
                '/ptuser.Service/BindBuyerTag',
                request_serializer=user_dot_user__pb2.BindBuyerTagArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BindBuyerTagResp.FromString,
                )
        self.GetTags = channel.unary_unary(
                '/ptuser.Service/GetTags',
                request_serializer=user_dot_user__pb2.GetTagsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetTagsResp.FromString,
                )
        self.DelBuyerTags = channel.unary_unary(
                '/ptuser.Service/DelBuyerTags',
                request_serializer=user_dot_user__pb2.DelBuyerTagsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.DelBuyerTagsResp.FromString,
                )
        self.DelDeviceTags = channel.unary_unary(
                '/ptuser.Service/DelDeviceTags',
                request_serializer=user_dot_user__pb2.DelDeviceTagsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.DelDeviceTagsResp.FromString,
                )
        self.GetBuyerRealName = channel.unary_unary(
                '/ptuser.Service/GetBuyerRealName',
                request_serializer=user_dot_user__pb2.GetBuyerRealNameArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetBuyerRealNameResp.FromString,
                )
        self.GetRealNameById = channel.unary_unary(
                '/ptuser.Service/GetRealNameById',
                request_serializer=user_dot_user__pb2.GetRealNameByIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetRealNameByIdResp.FromString,
                )
        self.UpdateVerifiedById = channel.unary_unary(
                '/ptuser.Service/UpdateVerifiedById',
                request_serializer=user_dot_user__pb2.UpdateVerifiedByIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateVerifiedByIdResp.FromString,
                )
        self.InsertRealName = channel.unary_unary(
                '/ptuser.Service/InsertRealName',
                request_serializer=user_dot_user__pb2.InsertRealNameArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.InsertRealNameResp.FromString,
                )
        self.GetBuyerCashCardList = channel.unary_unary(
                '/ptuser.Service/GetBuyerCashCardList',
                request_serializer=user_dot_user__pb2.GetBuyerCashCardListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetBuyerCashCardListResp.FromString,
                )
        self.ActivateCashCard = channel.unary_unary(
                '/ptuser.Service/ActivateCashCard',
                request_serializer=user_dot_user__pb2.ActivateCashCardArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BuyerCashCard.FromString,
                )
        self.UseCashCard = channel.unary_unary(
                '/ptuser.Service/UseCashCard',
                request_serializer=user_dot_user__pb2.UseCashCardArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UseCashCardResp.FromString,
                )
        self.RefundCashCard = channel.unary_unary(
                '/ptuser.Service/RefundCashCard',
                request_serializer=user_dot_user__pb2.RefundCashCardArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.RefundCashCardResp.FromString,
                )
        self.GetCashCard = channel.unary_unary(
                '/ptuser.Service/GetCashCard',
                request_serializer=user_dot_user__pb2.GetCashCardArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.BuyerCashCard.FromString,
                )
        self.CheckLocation = channel.unary_unary(
                '/ptuser.Service/CheckLocation',
                request_serializer=user_dot_user__pb2.CheckLocationArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CheckLocationResp.FromString,
                )
        self.UserSuggestion = channel.unary_unary(
                '/ptuser.Service/UserSuggestion',
                request_serializer=user_dot_user__pb2.UserSuggestionArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UserSuggestionResp.FromString,
                )
        self.FetchUsersSuggestion = channel.unary_unary(
                '/ptuser.Service/FetchUsersSuggestion',
                request_serializer=user_dot_user__pb2.FetchUserSuggestionArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.FetchUserSuggestionResp.FromString,
                )
        self.POIList = channel.unary_unary(
                '/ptuser.Service/POIList',
                request_serializer=user_dot_user__pb2.POIListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.POIListResp.FromString,
                )
        self.GetUserAddressLocation = channel.unary_unary(
                '/ptuser.Service/GetUserAddressLocation',
                request_serializer=user_dot_user__pb2.GetUserAddressLocationArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUserAddressLocationResp.FromString,
                )
        self.GetUserAddressLocationByAddrId = channel.unary_unary(
                '/ptuser.Service/GetUserAddressLocationByAddrId',
                request_serializer=user_dot_user__pb2.GetUserAddressLocationByAddrIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUserAddressLocationResp.FromString,
                )
        self.GoodreviewReward = channel.unary_unary(
                '/ptuser.Service/GoodreviewReward',
                request_serializer=user_dot_user__pb2.GoodreviewRewardArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GoodreviewRewardResp.FromString,
                )
        self.GetUserPropCategoryList = channel.unary_unary(
                '/ptuser.Service/GetUserPropCategoryList',
                request_serializer=user_dot_user__pb2.GetUsePropCategoryListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUsePropCategoryListResp.FromString,
                )
        self.SetUserSwitch = channel.unary_unary(
                '/ptuser.Service/SetUserSwitch',
                request_serializer=user_dot_user__pb2.SetUserSwitchArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.SetUserSwitchResp.FromString,
                )
        self.GetUserSwitch = channel.unary_unary(
                '/ptuser.Service/GetUserSwitch',
                request_serializer=user_dot_user__pb2.GetUserSwitchArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUserSwitchResp.FromString,
                )
        self.GetUserSwitches = channel.unary_unary(
                '/ptuser.Service/GetUserSwitches',
                request_serializer=user_dot_user__pb2.GetUserSwitchesArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUserSwitchesResp.FromString,
                )
        self.MirgateUserData = channel.unary_unary(
                '/ptuser.Service/MirgateUserData',
                request_serializer=user_dot_user__pb2.MirgateUserDataArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.EmptyResp.FromString,
                )
        self.DeleteQttAuth = channel.unary_unary(
                '/ptuser.Service/DeleteQttAuth',
                request_serializer=user_dot_user__pb2.DeleteQttAuthArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.DeleteQttAuthResp.FromString,
                )
        self.IsUserInEvaluateBlackList = channel.unary_unary(
                '/ptuser.Service/IsUserInEvaluateBlackList',
                request_serializer=user_dot_user__pb2.IsUserInEvaluateBlackListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.IsUserInEvaluateBlackListResp.FromString,
                )
        self.UserCenterFilterVariable = channel.unary_unary(
                '/ptuser.Service/UserCenterFilterVariable',
                request_serializer=user_dot_user__pb2.UserCenterFilterVariableArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UserCenterFilterVariableResp.FromString,
                )
        self.TkCenterFilterVariable = channel.unary_unary(
                '/ptuser.Service/TkCenterFilterVariable',
                request_serializer=user_dot_user__pb2.TkCenterFilterVariableArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.TkCenterFilterVariableResp.FromString,
                )
        self.GetUnionId = channel.unary_unary(
                '/ptuser.Service/GetUnionId',
                request_serializer=user_dot_user__pb2.GetUnionIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUnionIdResp.FromString,
                )
        self.ListBuyerOpenIdWithoutCache = channel.unary_unary(
                '/ptuser.Service/ListBuyerOpenIdWithoutCache',
                request_serializer=user_dot_user__pb2.ListBuyerOpenIdWithoutCacheArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.ListBuyerOpenIdWithoutCacheResp.FromString,
                )
        self.ListBuyerWechatAuthWithoutCache = channel.unary_unary(
                '/ptuser.Service/ListBuyerWechatAuthWithoutCache',
                request_serializer=user_dot_user__pb2.ListBuyerWechatAuthWithoutCacheArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.ListBuyerWechatAuthWithoutCacheResp.FromString,
                )
        self.IncrSwitchTimes = channel.unary_unary(
                '/ptuser.Service/IncrSwitchTimes',
                request_serializer=user_dot_user__pb2.IncrSwitchTimesArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.IncrSwitchTimesResp.FromString,
                )
        self.CheckUserFuncOpen = channel.unary_unary(
                '/ptuser.Service/CheckUserFuncOpen',
                request_serializer=user_dot_user__pb2.CheckUserFuncOpenArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CheckUserFuncOpenResp.FromString,
                )
        self.GetUserByMobile = channel.unary_unary(
                '/ptuser.Service/GetUserByMobile',
                request_serializer=user_dot_user__pb2.GetUserByMobileArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetUserByMobileResp.FromString,
                )
        self.GetAppConfig = channel.unary_unary(
                '/ptuser.Service/GetAppConfig',
                request_serializer=user_dot_user__pb2.GetAppConfigArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.AppConfigResp.FromString,
                )
        self.GetTestFlight = channel.unary_unary(
                '/ptuser.Service/GetTestFlight',
                request_serializer=user_dot_user__pb2.GetTestFlightArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetTestFlightResp.FromString,
                )
        self.GetAppConfigs = channel.unary_unary(
                '/ptuser.Service/GetAppConfigs',
                request_serializer=user_dot_user__pb2.GetAppConfigsArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetAppConfigsResp.FromString,
                )
        self.AddAppConfig = channel.unary_unary(
                '/ptuser.Service/AddAppConfig',
                request_serializer=user_dot_user__pb2.AddAppConfigArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.AppConfigResp.FromString,
                )
        self.GetH5Resource = channel.unary_unary(
                '/ptuser.Service/GetH5Resource',
                request_serializer=user_dot_user__pb2.GetH5ResourceArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetH5ResourceResp.FromString,
                )
        self.UpdateAppConfig = channel.unary_unary(
                '/ptuser.Service/UpdateAppConfig',
                request_serializer=user_dot_user__pb2.UpdateAppConfigArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.UpdateConfigResp.FromString,
                )
        self.SetUserPrivilege = channel.unary_unary(
                '/ptuser.Service/SetUserPrivilege',
                request_serializer=user_dot_user__pb2.SetUserPrivilegeArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.SetUserPrivilegeResp.FromString,
                )
        self.UserWXTransferCheck = channel.unary_unary(
                '/ptuser.Service/UserWXTransferCheck',
                request_serializer=user_dot_user__pb2.UserWXTransferCheckReq.SerializeToString,
                response_deserializer=user_dot_user__pb2.UserWXTransferCheckResp.FromString,
                )
        self.UserWXTransfer = channel.unary_unary(
                '/ptuser.Service/UserWXTransfer',
                request_serializer=user_dot_user__pb2.UserWXTransferReq.SerializeToString,
                response_deserializer=user_dot_user__pb2.UserWXTransferResp.FromString,
                )
        self.IsAdsBlackList = channel.unary_unary(
                '/ptuser.Service/IsAdsBlackList',
                request_serializer=user_dot_user__pb2.IsAdsBlackListArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.IsAdsBlackListResp.FromString,
                )
        self.CheckUserCanTake = channel.unary_unary(
                '/ptuser.Service/CheckUserCanTake',
                request_serializer=user_dot_user__pb2.CheckUserCanTakeArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.CheckUserCanTakeResp.FromString,
                )
        self.GetHotFixConfig = channel.unary_unary(
                '/ptuser.Service/GetHotFixConfig',
                request_serializer=user_dot_user__pb2.GetHotFixConfigArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetHotFixConfigResp.FromString,
                )
        self.LatestUidFromTuid = channel.unary_unary(
                '/ptuser.Service/LatestUidFromTuid',
                request_serializer=user_dot_user__pb2.LatestUidFromTuidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.LatestUidFromTuidResp.FromString,
                )
        self.GetDeviceIdentityByBuyerId = channel.unary_unary(
                '/ptuser.Service/GetDeviceIdentityByBuyerId',
                request_serializer=user_dot_user__pb2.GetDeviceIdentityByBuyerIdArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetDeviceIdentityByBuyerIdResp.FromString,
                )
        self.EncodeEpidByClientAndOpenid = channel.unary_unary(
                '/ptuser.Service/EncodeEpidByClientAndOpenid',
                request_serializer=user_dot_user__pb2.EncodeEpidByClientAndOpenidArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.EncodeEpidByClientAndOpenidResp.FromString,
                )
        self.GetSRSuggest = channel.unary_unary(
                '/ptuser.Service/GetSRSuggest',
                request_serializer=user_dot_user__pb2.GetSRSuggestArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.GetSRSuggestResp.FromString,
                )
        self.SetSRSuggest = channel.unary_unary(
                '/ptuser.Service/SetSRSuggest',
                request_serializer=user_dot_user__pb2.SetSRSuggestArgs.SerializeToString,
                response_deserializer=user_dot_user__pb2.SetSRSuggestResp.FromString,
                )


class ServiceServicer(object):
    """User通指买家, 即app端用户, 卖家会用mall来表示
    """

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserByToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMobile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMobileWithoutVerify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMobileFromInternalAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateMobilecode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyMobilecodeOldPhone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Bind(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unbind(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBindStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckMpOpenid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMopenid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUidByMopenid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitFormId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecoverAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FirstLoginStats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QttFarmBindAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfile(self, request, context):
        """个人信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileNickname(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileAvatar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileGender(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileBirthday(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileSignature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWechatOpenid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWechatOpenidByCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckMPSubscribed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMPSubscribed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQttMemberId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyerIdFromQttToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQttInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddresses(self, request, context):
        """收货地址
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultOrFirstAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAddressDefault(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MirgateAddress(self, request, context):
        """deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFavoriteGoods(self, request, context):
        """个人收藏
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllFavoriteGoods(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddFavoriteGoods(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchAddFavoriteGoods(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFavoriteGoods(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFavoriteMall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllFavoriteMall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddFavoriteMall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveFavoriteMall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMall(self, request, context):
        """店铺
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMallDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshMallDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshGetMall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMallCategoryGoodsIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRefundAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultOrFirstRefundAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMallList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSelfSupportMallIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGoodMallIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkMallDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGoodMallList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMallBrandLicense(self, request, context):
        """获取店铺品牌授权
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkMallLogo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkMallQuickRefund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterDevice(self, request, context):
        """注册设备
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeviceIdCorrect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindDeviceBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasBindDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasBindDevice4Tuid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFirstDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PopulateDeviceSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PopulateDeviceImei(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PopulateDeviceIdSupplier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PopulateDeviceDtu(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDtuByDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCidByTk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkBuyerAvatar(self, request, context):
        """聊天获得头像
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobots(self, request, context):
        """电脑人信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimpleRobots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRobotsAvatar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PurgeBuyer(self, request, context):
        """危险操作仅测试环境开放
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminPurgeBuyer(self, request, context):
        """管理员删除用户，只能删除指定好的用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminGetPurgeBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRegionsById(self, request, context):
        """获取region信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProvinceCityById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBindDeviceInfo(self, request, context):
        """获取绑定设备的用户数量
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindDeviceTag(self, request, context):
        """标签
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindBuyerTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelBuyerTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelDeviceTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyerRealName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRealNameById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVerifiedById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertRealName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuyerCashCardList(self, request, context):
        """现金卡
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateCashCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseCashCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefundCashCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCashCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckLocation(self, request, context):
        """检查地址信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserSuggestion(self, request, context):
        """收集用户建议
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchUsersSuggestion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def POIList(self, request, context):
        """根据用户的经纬度坐标获取 poi 列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserAddressLocation(self, request, context):
        """根据用户的收货地址获取对应的经纬度信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserAddressLocationByAddrId(self, request, context):
        """根据用户的收货地址ID获取对应的经纬度信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GoodreviewReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPropCategoryList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserSwitch(self, request, context):
        """用户自设开关（通用接口）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserSwitch(self, request, context):
        """获取用户自设开关（通用接口）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserSwitches(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MirgateUserData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteQttAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsUserInEvaluateBlackList(self, request, context):
        """黑名单相关
        测评黑名单用户判断
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserCenterFilterVariable(self, request, context):
        """用户中心属性（FilterVariable 使用，非离线计算，不保证性能）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TkCenterFilterVariable(self, request, context):
        """设备中心属性（FilterVariable 使用，非离线计算，不保证性能）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnionId(self, request, context):
        """获取unionId
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBuyerOpenIdWithoutCache(self, request, context):
        """获取用户所有的openId
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBuyerWechatAuthWithoutCache(self, request, context):
        """获取用户所有的WechatAuth
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IncrSwitchTimes(self, request, context):
        """弹窗计次
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUserFuncOpen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByMobile(self, request, context):
        """用手机号获取用户信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppConfig(self, request, context):
        """app管理相关
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTestFlight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAppConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetH5Resource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAppConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserPrivilege(self, request, context):
        """用户手机权限管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserWXTransferCheck(self, request, context):
        """用户微信提现（通用接口）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserWXTransfer(self, request, context):
        """用户微信提现，风控回调接口
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsAdsBlackList(self, request, context):
        """广告中台黑名单
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUserCanTake(self, request, context):
        """广告中台查询用户是否可以领取优惠券 (可批量查询)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHotFixConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LatestUidFromTuid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceIdentityByBuyerId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EncodeEpidByClientAndOpenid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSRSuggest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSRSuggest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=user_dot_user__pb2.LoginArgs.FromString,
                    response_serializer=user_dot_user__pb2.TokenResp.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=user_dot_user__pb2.RefreshTokenArgs.FromString,
                    response_serializer=user_dot_user__pb2.TokenResp.SerializeToString,
            ),
            'UserByToken': grpc.unary_unary_rpc_method_handler(
                    servicer.UserByToken,
                    request_deserializer=user_dot_user__pb2.UserByTokenArgs.FromString,
                    response_serializer=user_dot_user__pb2.UserByTokenResp.SerializeToString,
            ),
            'UserById': grpc.unary_unary_rpc_method_handler(
                    servicer.UserById,
                    request_deserializer=user_dot_user__pb2.UserByIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.UserByIdResp.SerializeToString,
            ),
            'UpdateMobile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMobile,
                    request_deserializer=user_dot_user__pb2.UpdateMobileArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateMobileResp.SerializeToString,
            ),
            'UpdateMobileWithoutVerify': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMobileWithoutVerify,
                    request_deserializer=user_dot_user__pb2.UpdateMobileWithoutVerifyArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateMobileWithoutVerifyResp.SerializeToString,
            ),
            'UpdateMobileFromInternalAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMobileFromInternalAccount,
                    request_deserializer=user_dot_user__pb2.UpdateMobileFromInternalAccountArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateMobileFromInternalAccountResp.SerializeToString,
            ),
            'GenerateMobilecode': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateMobilecode,
                    request_deserializer=user_dot_user__pb2.GenerateMobilecodeArgs.FromString,
                    response_serializer=user_dot_user__pb2.GenerateMobilecodeResp.SerializeToString,
            ),
            'VerifyMobilecodeOldPhone': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyMobilecodeOldPhone,
                    request_deserializer=user_dot_user__pb2.VerifyMobilecodeArgs.FromString,
                    response_serializer=user_dot_user__pb2.VerifyMobilecodeResp.SerializeToString,
            ),
            'Bind': grpc.unary_unary_rpc_method_handler(
                    servicer.Bind,
                    request_deserializer=user_dot_user__pb2.BindArgs.FromString,
                    response_serializer=user_dot_user__pb2.BindResp.SerializeToString,
            ),
            'Unbind': grpc.unary_unary_rpc_method_handler(
                    servicer.Unbind,
                    request_deserializer=user_dot_user__pb2.UnbindArgs.FromString,
                    response_serializer=user_dot_user__pb2.UnbindResp.SerializeToString,
            ),
            'GetBindStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBindStatus,
                    request_deserializer=user_dot_user__pb2.GetBindStatusArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetBindStatusResp.SerializeToString,
            ),
            'CheckMpOpenid': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckMpOpenid,
                    request_deserializer=user_dot_user__pb2.CheckMpOpenidArgs.FromString,
                    response_serializer=user_dot_user__pb2.CheckMpOpenidResp.SerializeToString,
            ),
            'GetMopenid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMopenid,
                    request_deserializer=user_dot_user__pb2.GetMopenidArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetMopenidResp.SerializeToString,
            ),
            'GetUidByMopenid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUidByMopenid,
                    request_deserializer=user_dot_user__pb2.GetUidByMopenidArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUidByMopenidResp.SerializeToString,
            ),
            'SubmitFormId': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitFormId,
                    request_deserializer=user_dot_user__pb2.SubmitFormIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.SubmitFormIdResp.SerializeToString,
            ),
            'CancelAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelAccount,
                    request_deserializer=user_dot_user__pb2.CancelAccountArgs.FromString,
                    response_serializer=user_dot_user__pb2.CancelAccountResp.SerializeToString,
            ),
            'RecoverAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.RecoverAccount,
                    request_deserializer=user_dot_user__pb2.RecoverAccountArgs.FromString,
                    response_serializer=user_dot_user__pb2.RecoverAccountResp.SerializeToString,
            ),
            'FirstLoginStats': grpc.unary_unary_rpc_method_handler(
                    servicer.FirstLoginStats,
                    request_deserializer=user_dot_user__pb2.FirstLoginStatsArgs.FromString,
                    response_serializer=user_dot_user__pb2.FirstLoginStatsResp.SerializeToString,
            ),
            'QttFarmBindAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.QttFarmBindAccount,
                    request_deserializer=user_dot_user__pb2.QttFarmBindAccountArgs.FromString,
                    response_serializer=user_dot_user__pb2.QttFarmBindAccountResp.SerializeToString,
            ),
            'GetProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfile,
                    request_deserializer=user_dot_user__pb2.GetProfileArgs.FromString,
                    response_serializer=user_dot_user__pb2.Profile.SerializeToString,
            ),
            'UpdateProfileNickname': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileNickname,
                    request_deserializer=user_dot_user__pb2.UpdateProfileNicknameArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateProfileNicknameResp.SerializeToString,
            ),
            'UpdateProfileAvatar': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileAvatar,
                    request_deserializer=user_dot_user__pb2.UpdateProfileAvatarArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateProfileAvatarResp.SerializeToString,
            ),
            'UpdateProfileGender': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileGender,
                    request_deserializer=user_dot_user__pb2.UpdateProfileGenderArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateProfileGenderResp.SerializeToString,
            ),
            'UpdateProfileBirthday': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileBirthday,
                    request_deserializer=user_dot_user__pb2.UpdateProfileBirthdayArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateProfileBirthdayResp.SerializeToString,
            ),
            'UpdateProfileSignature': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileSignature,
                    request_deserializer=user_dot_user__pb2.UpdateProfileSignatureArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateProfileSignatureResp.SerializeToString,
            ),
            'UpdateProfileLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileLocation,
                    request_deserializer=user_dot_user__pb2.UpdateProfileLocationArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateProfileLocationResp.SerializeToString,
            ),
            'GetWechatOpenid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWechatOpenid,
                    request_deserializer=user_dot_user__pb2.GetWechatOpenidArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetWechatOpenidResp.SerializeToString,
            ),
            'GetWechatOpenidByCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWechatOpenidByCode,
                    request_deserializer=user_dot_user__pb2.GetWechatOpenidByCodeArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetWechatOpenidByCodeResp.SerializeToString,
            ),
            'CheckMPSubscribed': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckMPSubscribed,
                    request_deserializer=user_dot_user__pb2.CheckMPSubscribedArgs.FromString,
                    response_serializer=user_dot_user__pb2.CheckMPSubscribedResp.SerializeToString,
            ),
            'SetMPSubscribed': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMPSubscribed,
                    request_deserializer=user_dot_user__pb2.SetMPSubscribedArgs.FromString,
                    response_serializer=user_dot_user__pb2.SetMPSubscribedResp.SerializeToString,
            ),
            'GetQttMemberId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQttMemberId,
                    request_deserializer=user_dot_user__pb2.GetQttMemberIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetQttMemberIdResp.SerializeToString,
            ),
            'GetBuyerIdFromQttToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyerIdFromQttToken,
                    request_deserializer=user_dot_user__pb2.GetBuyerIdFromQttTokenArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetBuyerIdFromQttTokenResp.SerializeToString,
            ),
            'GetQttInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQttInfo,
                    request_deserializer=user_dot_user__pb2.GetQttInfoArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetQttInfoResp.SerializeToString,
            ),
            'GetAddresses': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddresses,
                    request_deserializer=user_dot_user__pb2.GetAddressesArgs.FromString,
                    response_serializer=user_dot_user__pb2.Addresses.SerializeToString,
            ),
            'GetAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAddress,
                    request_deserializer=user_dot_user__pb2.AddressIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.Address.SerializeToString,
            ),
            'GetDefaultOrFirstAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultOrFirstAddress,
                    request_deserializer=user_dot_user__pb2.GetDefaultOrFirstAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.Address.SerializeToString,
            ),
            'CreateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAddress,
                    request_deserializer=user_dot_user__pb2.CreateAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.CreateAddressResp.SerializeToString,
            ),
            'UpdateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAddress,
                    request_deserializer=user_dot_user__pb2.UpdateAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateAddressResp.SerializeToString,
            ),
            'DeleteAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAddress,
                    request_deserializer=user_dot_user__pb2.DeleteAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.DeleteAddressResp.SerializeToString,
            ),
            'SetAddressDefault': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAddressDefault,
                    request_deserializer=user_dot_user__pb2.SetAddressDefaultArgs.FromString,
                    response_serializer=user_dot_user__pb2.SetAddressDefaultResp.SerializeToString,
            ),
            'MirgateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.MirgateAddress,
                    request_deserializer=user_dot_user__pb2.MirgateAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.MirgateAddressResp.SerializeToString,
            ),
            'GetFavoriteGoods': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFavoriteGoods,
                    request_deserializer=user_dot_user__pb2.GetFavoriteGoodsArgs.FromString,
                    response_serializer=user_dot_user__pb2.FavoriteGoodsResp.SerializeToString,
            ),
            'GetAllFavoriteGoods': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllFavoriteGoods,
                    request_deserializer=user_dot_user__pb2.GetAllFavoriteGoodsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetAllFavoriteGoodsResp.SerializeToString,
            ),
            'AddFavoriteGoods': grpc.unary_unary_rpc_method_handler(
                    servicer.AddFavoriteGoods,
                    request_deserializer=user_dot_user__pb2.AddFavoriteGoodsArgs.FromString,
                    response_serializer=user_dot_user__pb2.AddFavoriteGoodsResp.SerializeToString,
            ),
            'BatchAddFavoriteGoods': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchAddFavoriteGoods,
                    request_deserializer=user_dot_user__pb2.BatchAddFavoriteGoodsArgs.FromString,
                    response_serializer=user_dot_user__pb2.BatchAddFavoriteGoodsResp.SerializeToString,
            ),
            'RemoveFavoriteGoods': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFavoriteGoods,
                    request_deserializer=user_dot_user__pb2.RemoveFavoriteGoodsArgs.FromString,
                    response_serializer=user_dot_user__pb2.RemoveFavoriteGoodsResp.SerializeToString,
            ),
            'GetFavoriteMall': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFavoriteMall,
                    request_deserializer=user_dot_user__pb2.GetFavoriteMallArgs.FromString,
                    response_serializer=user_dot_user__pb2.FavoriteMallResp.SerializeToString,
            ),
            'GetAllFavoriteMall': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllFavoriteMall,
                    request_deserializer=user_dot_user__pb2.GetAllFavoriteMallArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetAllFavoriteMallResp.SerializeToString,
            ),
            'AddFavoriteMall': grpc.unary_unary_rpc_method_handler(
                    servicer.AddFavoriteMall,
                    request_deserializer=user_dot_user__pb2.AddFavoriteMallArgs.FromString,
                    response_serializer=user_dot_user__pb2.AddFavoriteMallResp.SerializeToString,
            ),
            'RemoveFavoriteMall': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveFavoriteMall,
                    request_deserializer=user_dot_user__pb2.RemoveFavoriteMallArgs.FromString,
                    response_serializer=user_dot_user__pb2.RemoveFavoriteMallResp.SerializeToString,
            ),
            'GetMall': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMall,
                    request_deserializer=user_dot_user__pb2.GetMallArgs.FromString,
                    response_serializer=user_dot_user__pb2.Mall.SerializeToString,
            ),
            'GetCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategory,
                    request_deserializer=user_dot_user__pb2.GetCategoryArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetCategoryResp.SerializeToString,
            ),
            'GetMallDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMallDetail,
                    request_deserializer=user_dot_user__pb2.GetMallDetailArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetMallDetailResp.SerializeToString,
            ),
            'RefreshMallDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshMallDetail,
                    request_deserializer=user_dot_user__pb2.RefreshMallDetailReq.FromString,
                    response_serializer=user_dot_user__pb2.RefreshMallDetailResp.SerializeToString,
            ),
            'RefreshGetMall': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshGetMall,
                    request_deserializer=user_dot_user__pb2.RefreshGetMallReq.FromString,
                    response_serializer=user_dot_user__pb2.RefreshGetMallResp.SerializeToString,
            ),
            'GetMallCategoryGoodsIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMallCategoryGoodsIds,
                    request_deserializer=user_dot_user__pb2.GetMallCategoryGoodsIdsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetMallCategoryGoodsIdsResp.SerializeToString,
            ),
            'GetRefundAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRefundAddress,
                    request_deserializer=user_dot_user__pb2.GetRefundAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.RefundAddress.SerializeToString,
            ),
            'GetDefaultOrFirstRefundAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultOrFirstRefundAddress,
                    request_deserializer=user_dot_user__pb2.GetDefaultOrFirstRefundAddressArgs.FromString,
                    response_serializer=user_dot_user__pb2.RefundAddress.SerializeToString,
            ),
            'GetMallList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMallList,
                    request_deserializer=user_dot_user__pb2.GetMallListArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetMallListResp.SerializeToString,
            ),
            'GetAllSelfSupportMallIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSelfSupportMallIds,
                    request_deserializer=user_dot_user__pb2.GetAllSelfSupportMallIdsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetAllSelfSupportMallIdsResp.SerializeToString,
            ),
            'GetGoodMallIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGoodMallIds,
                    request_deserializer=user_dot_user__pb2.GetGoodMallIdsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetGoodMallIdsResp.SerializeToString,
            ),
            'BulkMallDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkMallDetail,
                    request_deserializer=user_dot_user__pb2.BulkMallDetailArgs.FromString,
                    response_serializer=user_dot_user__pb2.BulkMallDetailResp.SerializeToString,
            ),
            'GetGoodMallList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGoodMallList,
                    request_deserializer=user_dot_user__pb2.GetGoodMallListArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetGoodMallListResp.SerializeToString,
            ),
            'GetMallBrandLicense': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMallBrandLicense,
                    request_deserializer=user_dot_user__pb2.GetMallBrandLicenseArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetMallBrandLicenseResp.SerializeToString,
            ),
            'BulkMallLogo': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkMallLogo,
                    request_deserializer=user_dot_user__pb2.BulkMallLogoArgs.FromString,
                    response_serializer=user_dot_user__pb2.BulkMallLogoResp.SerializeToString,
            ),
            'BulkMallQuickRefund': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkMallQuickRefund,
                    request_deserializer=user_dot_user__pb2.BulkMallQuickRefundArgs.FromString,
                    response_serializer=user_dot_user__pb2.BulkMallQuickRefundResp.SerializeToString,
            ),
            'RegisterDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDevice,
                    request_deserializer=user_dot_user__pb2.RegisterDeviceArgs.FromString,
                    response_serializer=user_dot_user__pb2.RegisterDeviceResp.SerializeToString,
            ),
            'DeviceIdCorrect': grpc.unary_unary_rpc_method_handler(
                    servicer.DeviceIdCorrect,
                    request_deserializer=user_dot_user__pb2.DeviceIdCorrectArgs.FromString,
                    response_serializer=user_dot_user__pb2.DeviceIdCorrectResp.SerializeToString,
            ),
            'BindDeviceBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.BindDeviceBuyer,
                    request_deserializer=user_dot_user__pb2.BindDeviceBuyerArgs.FromString,
                    response_serializer=user_dot_user__pb2.BindDeviceBuyerResp.SerializeToString,
            ),
            'HasBindDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.HasBindDevice,
                    request_deserializer=user_dot_user__pb2.HasBindDeviceArgs.FromString,
                    response_serializer=user_dot_user__pb2.HasBindDeviceResp.SerializeToString,
            ),
            'HasBindDevice4Tuid': grpc.unary_unary_rpc_method_handler(
                    servicer.HasBindDevice4Tuid,
                    request_deserializer=user_dot_user__pb2.HasBindDevice4TuidArgs.FromString,
                    response_serializer=user_dot_user__pb2.HasBindDevice4TuidResp.SerializeToString,
            ),
            'GetFirstDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFirstDevice,
                    request_deserializer=user_dot_user__pb2.GetFirstDeviceArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetFirstDeviceResp.SerializeToString,
            ),
            'PopulateDeviceSource': grpc.unary_unary_rpc_method_handler(
                    servicer.PopulateDeviceSource,
                    request_deserializer=user_dot_user__pb2.PopulateDeviceSourceArgs.FromString,
                    response_serializer=user_dot_user__pb2.PopulateDeviceSourceResp.SerializeToString,
            ),
            'PopulateDeviceImei': grpc.unary_unary_rpc_method_handler(
                    servicer.PopulateDeviceImei,
                    request_deserializer=user_dot_user__pb2.PopulateDeviceImeiArgs.FromString,
                    response_serializer=user_dot_user__pb2.PopulateDeviceImeiResp.SerializeToString,
            ),
            'PopulateDeviceIdSupplier': grpc.unary_unary_rpc_method_handler(
                    servicer.PopulateDeviceIdSupplier,
                    request_deserializer=user_dot_user__pb2.PopulateDeviceIdSupplierArgs.FromString,
                    response_serializer=user_dot_user__pb2.PopulateDeviceIdSupplierResp.SerializeToString,
            ),
            'PopulateDeviceDtu': grpc.unary_unary_rpc_method_handler(
                    servicer.PopulateDeviceDtu,
                    request_deserializer=user_dot_user__pb2.PopulateDeviceDtuArgs.FromString,
                    response_serializer=user_dot_user__pb2.PopulateDeviceDtuResp.SerializeToString,
            ),
            'GetDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceInfo,
                    request_deserializer=user_dot_user__pb2.GetDeviceInfoArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetDeviceInfoResp.SerializeToString,
            ),
            'GetDeviceSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceSource,
                    request_deserializer=user_dot_user__pb2.GetDeviceSourceArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetDeviceSourceResp.SerializeToString,
            ),
            'GetDtuByDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDtuByDevice,
                    request_deserializer=user_dot_user__pb2.GetDtuByDeviceArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetDtuByDeviceResp.SerializeToString,
            ),
            'GetCidByTk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCidByTk,
                    request_deserializer=user_dot_user__pb2.GetCidByTkArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetCidByTkResp.SerializeToString,
            ),
            'BulkBuyerAvatar': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkBuyerAvatar,
                    request_deserializer=user_dot_user__pb2.BulkUserAvatarArgs.FromString,
                    response_serializer=user_dot_user__pb2.BulkUserAvatarResp.SerializeToString,
            ),
            'GetRobots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobots,
                    request_deserializer=user_dot_user__pb2.GetRobotArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetRobotResp.SerializeToString,
            ),
            'GetSimpleRobots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimpleRobots,
                    request_deserializer=user_dot_user__pb2.GetSimpleRobotsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetSimpleRobotsResp.SerializeToString,
            ),
            'GetRobotById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotById,
                    request_deserializer=user_dot_user__pb2.GetRobotByIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetRobotByIdResp.SerializeToString,
            ),
            'GetRobotsAvatar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRobotsAvatar,
                    request_deserializer=user_dot_user__pb2.GetRobotsAvatarArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetRobotsAvatarResp.SerializeToString,
            ),
            'PurgeBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.PurgeBuyer,
                    request_deserializer=user_dot_user__pb2.PurgeBuyerArgs.FromString,
                    response_serializer=user_dot_user__pb2.PurgeBuyerResp.SerializeToString,
            ),
            'AdminPurgeBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminPurgeBuyer,
                    request_deserializer=user_dot_user__pb2.AdminPurgeBuyerArgs.FromString,
                    response_serializer=user_dot_user__pb2.AdminPurgeBuyerResp.SerializeToString,
            ),
            'AdminGetPurgeBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminGetPurgeBuyer,
                    request_deserializer=user_dot_user__pb2.AdminGetPurgeBuyerArgs.FromString,
                    response_serializer=user_dot_user__pb2.AdminGetPurgeBuyerResp.SerializeToString,
            ),
            'GetRegionsById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegionsById,
                    request_deserializer=user_dot_user__pb2.GetRegionsByIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetRegionsByIdResp.SerializeToString,
            ),
            'GetProvinceCityById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProvinceCityById,
                    request_deserializer=user_dot_user__pb2.GetProvinceCityByIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetProvinceCityByIdResp.SerializeToString,
            ),
            'GetBindDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBindDeviceInfo,
                    request_deserializer=user_dot_user__pb2.GetBindDeviceInfoArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetBindDeviceInfoResp.SerializeToString,
            ),
            'BindDeviceTag': grpc.unary_unary_rpc_method_handler(
                    servicer.BindDeviceTag,
                    request_deserializer=user_dot_user__pb2.BindDeviceTagArgs.FromString,
                    response_serializer=user_dot_user__pb2.BindDeviceTagResp.SerializeToString,
            ),
            'BindBuyerTag': grpc.unary_unary_rpc_method_handler(
                    servicer.BindBuyerTag,
                    request_deserializer=user_dot_user__pb2.BindBuyerTagArgs.FromString,
                    response_serializer=user_dot_user__pb2.BindBuyerTagResp.SerializeToString,
            ),
            'GetTags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTags,
                    request_deserializer=user_dot_user__pb2.GetTagsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetTagsResp.SerializeToString,
            ),
            'DelBuyerTags': grpc.unary_unary_rpc_method_handler(
                    servicer.DelBuyerTags,
                    request_deserializer=user_dot_user__pb2.DelBuyerTagsArgs.FromString,
                    response_serializer=user_dot_user__pb2.DelBuyerTagsResp.SerializeToString,
            ),
            'DelDeviceTags': grpc.unary_unary_rpc_method_handler(
                    servicer.DelDeviceTags,
                    request_deserializer=user_dot_user__pb2.DelDeviceTagsArgs.FromString,
                    response_serializer=user_dot_user__pb2.DelDeviceTagsResp.SerializeToString,
            ),
            'GetBuyerRealName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyerRealName,
                    request_deserializer=user_dot_user__pb2.GetBuyerRealNameArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetBuyerRealNameResp.SerializeToString,
            ),
            'GetRealNameById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRealNameById,
                    request_deserializer=user_dot_user__pb2.GetRealNameByIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetRealNameByIdResp.SerializeToString,
            ),
            'UpdateVerifiedById': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVerifiedById,
                    request_deserializer=user_dot_user__pb2.UpdateVerifiedByIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateVerifiedByIdResp.SerializeToString,
            ),
            'InsertRealName': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertRealName,
                    request_deserializer=user_dot_user__pb2.InsertRealNameArgs.FromString,
                    response_serializer=user_dot_user__pb2.InsertRealNameResp.SerializeToString,
            ),
            'GetBuyerCashCardList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuyerCashCardList,
                    request_deserializer=user_dot_user__pb2.GetBuyerCashCardListArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetBuyerCashCardListResp.SerializeToString,
            ),
            'ActivateCashCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateCashCard,
                    request_deserializer=user_dot_user__pb2.ActivateCashCardArgs.FromString,
                    response_serializer=user_dot_user__pb2.BuyerCashCard.SerializeToString,
            ),
            'UseCashCard': grpc.unary_unary_rpc_method_handler(
                    servicer.UseCashCard,
                    request_deserializer=user_dot_user__pb2.UseCashCardArgs.FromString,
                    response_serializer=user_dot_user__pb2.UseCashCardResp.SerializeToString,
            ),
            'RefundCashCard': grpc.unary_unary_rpc_method_handler(
                    servicer.RefundCashCard,
                    request_deserializer=user_dot_user__pb2.RefundCashCardArgs.FromString,
                    response_serializer=user_dot_user__pb2.RefundCashCardResp.SerializeToString,
            ),
            'GetCashCard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCashCard,
                    request_deserializer=user_dot_user__pb2.GetCashCardArgs.FromString,
                    response_serializer=user_dot_user__pb2.BuyerCashCard.SerializeToString,
            ),
            'CheckLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckLocation,
                    request_deserializer=user_dot_user__pb2.CheckLocationArgs.FromString,
                    response_serializer=user_dot_user__pb2.CheckLocationResp.SerializeToString,
            ),
            'UserSuggestion': grpc.unary_unary_rpc_method_handler(
                    servicer.UserSuggestion,
                    request_deserializer=user_dot_user__pb2.UserSuggestionArgs.FromString,
                    response_serializer=user_dot_user__pb2.UserSuggestionResp.SerializeToString,
            ),
            'FetchUsersSuggestion': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchUsersSuggestion,
                    request_deserializer=user_dot_user__pb2.FetchUserSuggestionArgs.FromString,
                    response_serializer=user_dot_user__pb2.FetchUserSuggestionResp.SerializeToString,
            ),
            'POIList': grpc.unary_unary_rpc_method_handler(
                    servicer.POIList,
                    request_deserializer=user_dot_user__pb2.POIListArgs.FromString,
                    response_serializer=user_dot_user__pb2.POIListResp.SerializeToString,
            ),
            'GetUserAddressLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserAddressLocation,
                    request_deserializer=user_dot_user__pb2.GetUserAddressLocationArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUserAddressLocationResp.SerializeToString,
            ),
            'GetUserAddressLocationByAddrId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserAddressLocationByAddrId,
                    request_deserializer=user_dot_user__pb2.GetUserAddressLocationByAddrIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUserAddressLocationResp.SerializeToString,
            ),
            'GoodreviewReward': grpc.unary_unary_rpc_method_handler(
                    servicer.GoodreviewReward,
                    request_deserializer=user_dot_user__pb2.GoodreviewRewardArgs.FromString,
                    response_serializer=user_dot_user__pb2.GoodreviewRewardResp.SerializeToString,
            ),
            'GetUserPropCategoryList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPropCategoryList,
                    request_deserializer=user_dot_user__pb2.GetUsePropCategoryListArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUsePropCategoryListResp.SerializeToString,
            ),
            'SetUserSwitch': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserSwitch,
                    request_deserializer=user_dot_user__pb2.SetUserSwitchArgs.FromString,
                    response_serializer=user_dot_user__pb2.SetUserSwitchResp.SerializeToString,
            ),
            'GetUserSwitch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSwitch,
                    request_deserializer=user_dot_user__pb2.GetUserSwitchArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUserSwitchResp.SerializeToString,
            ),
            'GetUserSwitches': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSwitches,
                    request_deserializer=user_dot_user__pb2.GetUserSwitchesArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUserSwitchesResp.SerializeToString,
            ),
            'MirgateUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.MirgateUserData,
                    request_deserializer=user_dot_user__pb2.MirgateUserDataArgs.FromString,
                    response_serializer=user_dot_user__pb2.EmptyResp.SerializeToString,
            ),
            'DeleteQttAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteQttAuth,
                    request_deserializer=user_dot_user__pb2.DeleteQttAuthArgs.FromString,
                    response_serializer=user_dot_user__pb2.DeleteQttAuthResp.SerializeToString,
            ),
            'IsUserInEvaluateBlackList': grpc.unary_unary_rpc_method_handler(
                    servicer.IsUserInEvaluateBlackList,
                    request_deserializer=user_dot_user__pb2.IsUserInEvaluateBlackListArgs.FromString,
                    response_serializer=user_dot_user__pb2.IsUserInEvaluateBlackListResp.SerializeToString,
            ),
            'UserCenterFilterVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.UserCenterFilterVariable,
                    request_deserializer=user_dot_user__pb2.UserCenterFilterVariableArgs.FromString,
                    response_serializer=user_dot_user__pb2.UserCenterFilterVariableResp.SerializeToString,
            ),
            'TkCenterFilterVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.TkCenterFilterVariable,
                    request_deserializer=user_dot_user__pb2.TkCenterFilterVariableArgs.FromString,
                    response_serializer=user_dot_user__pb2.TkCenterFilterVariableResp.SerializeToString,
            ),
            'GetUnionId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnionId,
                    request_deserializer=user_dot_user__pb2.GetUnionIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUnionIdResp.SerializeToString,
            ),
            'ListBuyerOpenIdWithoutCache': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuyerOpenIdWithoutCache,
                    request_deserializer=user_dot_user__pb2.ListBuyerOpenIdWithoutCacheArgs.FromString,
                    response_serializer=user_dot_user__pb2.ListBuyerOpenIdWithoutCacheResp.SerializeToString,
            ),
            'ListBuyerWechatAuthWithoutCache': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuyerWechatAuthWithoutCache,
                    request_deserializer=user_dot_user__pb2.ListBuyerWechatAuthWithoutCacheArgs.FromString,
                    response_serializer=user_dot_user__pb2.ListBuyerWechatAuthWithoutCacheResp.SerializeToString,
            ),
            'IncrSwitchTimes': grpc.unary_unary_rpc_method_handler(
                    servicer.IncrSwitchTimes,
                    request_deserializer=user_dot_user__pb2.IncrSwitchTimesArgs.FromString,
                    response_serializer=user_dot_user__pb2.IncrSwitchTimesResp.SerializeToString,
            ),
            'CheckUserFuncOpen': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUserFuncOpen,
                    request_deserializer=user_dot_user__pb2.CheckUserFuncOpenArgs.FromString,
                    response_serializer=user_dot_user__pb2.CheckUserFuncOpenResp.SerializeToString,
            ),
            'GetUserByMobile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByMobile,
                    request_deserializer=user_dot_user__pb2.GetUserByMobileArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetUserByMobileResp.SerializeToString,
            ),
            'GetAppConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppConfig,
                    request_deserializer=user_dot_user__pb2.GetAppConfigArgs.FromString,
                    response_serializer=user_dot_user__pb2.AppConfigResp.SerializeToString,
            ),
            'GetTestFlight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTestFlight,
                    request_deserializer=user_dot_user__pb2.GetTestFlightArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetTestFlightResp.SerializeToString,
            ),
            'GetAppConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppConfigs,
                    request_deserializer=user_dot_user__pb2.GetAppConfigsArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetAppConfigsResp.SerializeToString,
            ),
            'AddAppConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAppConfig,
                    request_deserializer=user_dot_user__pb2.AddAppConfigArgs.FromString,
                    response_serializer=user_dot_user__pb2.AppConfigResp.SerializeToString,
            ),
            'GetH5Resource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetH5Resource,
                    request_deserializer=user_dot_user__pb2.GetH5ResourceArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetH5ResourceResp.SerializeToString,
            ),
            'UpdateAppConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAppConfig,
                    request_deserializer=user_dot_user__pb2.UpdateAppConfigArgs.FromString,
                    response_serializer=user_dot_user__pb2.UpdateConfigResp.SerializeToString,
            ),
            'SetUserPrivilege': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserPrivilege,
                    request_deserializer=user_dot_user__pb2.SetUserPrivilegeArgs.FromString,
                    response_serializer=user_dot_user__pb2.SetUserPrivilegeResp.SerializeToString,
            ),
            'UserWXTransferCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.UserWXTransferCheck,
                    request_deserializer=user_dot_user__pb2.UserWXTransferCheckReq.FromString,
                    response_serializer=user_dot_user__pb2.UserWXTransferCheckResp.SerializeToString,
            ),
            'UserWXTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.UserWXTransfer,
                    request_deserializer=user_dot_user__pb2.UserWXTransferReq.FromString,
                    response_serializer=user_dot_user__pb2.UserWXTransferResp.SerializeToString,
            ),
            'IsAdsBlackList': grpc.unary_unary_rpc_method_handler(
                    servicer.IsAdsBlackList,
                    request_deserializer=user_dot_user__pb2.IsAdsBlackListArgs.FromString,
                    response_serializer=user_dot_user__pb2.IsAdsBlackListResp.SerializeToString,
            ),
            'CheckUserCanTake': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUserCanTake,
                    request_deserializer=user_dot_user__pb2.CheckUserCanTakeArgs.FromString,
                    response_serializer=user_dot_user__pb2.CheckUserCanTakeResp.SerializeToString,
            ),
            'GetHotFixConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHotFixConfig,
                    request_deserializer=user_dot_user__pb2.GetHotFixConfigArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetHotFixConfigResp.SerializeToString,
            ),
            'LatestUidFromTuid': grpc.unary_unary_rpc_method_handler(
                    servicer.LatestUidFromTuid,
                    request_deserializer=user_dot_user__pb2.LatestUidFromTuidArgs.FromString,
                    response_serializer=user_dot_user__pb2.LatestUidFromTuidResp.SerializeToString,
            ),
            'GetDeviceIdentityByBuyerId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceIdentityByBuyerId,
                    request_deserializer=user_dot_user__pb2.GetDeviceIdentityByBuyerIdArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetDeviceIdentityByBuyerIdResp.SerializeToString,
            ),
            'EncodeEpidByClientAndOpenid': grpc.unary_unary_rpc_method_handler(
                    servicer.EncodeEpidByClientAndOpenid,
                    request_deserializer=user_dot_user__pb2.EncodeEpidByClientAndOpenidArgs.FromString,
                    response_serializer=user_dot_user__pb2.EncodeEpidByClientAndOpenidResp.SerializeToString,
            ),
            'GetSRSuggest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSRSuggest,
                    request_deserializer=user_dot_user__pb2.GetSRSuggestArgs.FromString,
                    response_serializer=user_dot_user__pb2.GetSRSuggestResp.SerializeToString,
            ),
            'SetSRSuggest': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSRSuggest,
                    request_deserializer=user_dot_user__pb2.SetSRSuggestArgs.FromString,
                    response_serializer=user_dot_user__pb2.SetSRSuggestResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ptuser.Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service(object):
    """User通指买家, 即app端用户, 卖家会用mall来表示
    """

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/Login',
            user_dot_user__pb2.LoginArgs.SerializeToString,
            user_dot_user__pb2.TokenResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RefreshToken',
            user_dot_user__pb2.RefreshTokenArgs.SerializeToString,
            user_dot_user__pb2.TokenResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserByToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UserByToken',
            user_dot_user__pb2.UserByTokenArgs.SerializeToString,
            user_dot_user__pb2.UserByTokenResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UserById',
            user_dot_user__pb2.UserByIdArgs.SerializeToString,
            user_dot_user__pb2.UserByIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMobile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateMobile',
            user_dot_user__pb2.UpdateMobileArgs.SerializeToString,
            user_dot_user__pb2.UpdateMobileResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMobileWithoutVerify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateMobileWithoutVerify',
            user_dot_user__pb2.UpdateMobileWithoutVerifyArgs.SerializeToString,
            user_dot_user__pb2.UpdateMobileWithoutVerifyResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMobileFromInternalAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateMobileFromInternalAccount',
            user_dot_user__pb2.UpdateMobileFromInternalAccountArgs.SerializeToString,
            user_dot_user__pb2.UpdateMobileFromInternalAccountResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateMobilecode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GenerateMobilecode',
            user_dot_user__pb2.GenerateMobilecodeArgs.SerializeToString,
            user_dot_user__pb2.GenerateMobilecodeResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyMobilecodeOldPhone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/VerifyMobilecodeOldPhone',
            user_dot_user__pb2.VerifyMobilecodeArgs.SerializeToString,
            user_dot_user__pb2.VerifyMobilecodeResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Bind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/Bind',
            user_dot_user__pb2.BindArgs.SerializeToString,
            user_dot_user__pb2.BindResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unbind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/Unbind',
            user_dot_user__pb2.UnbindArgs.SerializeToString,
            user_dot_user__pb2.UnbindResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBindStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetBindStatus',
            user_dot_user__pb2.GetBindStatusArgs.SerializeToString,
            user_dot_user__pb2.GetBindStatusResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckMpOpenid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CheckMpOpenid',
            user_dot_user__pb2.CheckMpOpenidArgs.SerializeToString,
            user_dot_user__pb2.CheckMpOpenidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMopenid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetMopenid',
            user_dot_user__pb2.GetMopenidArgs.SerializeToString,
            user_dot_user__pb2.GetMopenidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUidByMopenid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUidByMopenid',
            user_dot_user__pb2.GetUidByMopenidArgs.SerializeToString,
            user_dot_user__pb2.GetUidByMopenidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitFormId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/SubmitFormId',
            user_dot_user__pb2.SubmitFormIdArgs.SerializeToString,
            user_dot_user__pb2.SubmitFormIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CancelAccount',
            user_dot_user__pb2.CancelAccountArgs.SerializeToString,
            user_dot_user__pb2.CancelAccountResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecoverAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RecoverAccount',
            user_dot_user__pb2.RecoverAccountArgs.SerializeToString,
            user_dot_user__pb2.RecoverAccountResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FirstLoginStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/FirstLoginStats',
            user_dot_user__pb2.FirstLoginStatsArgs.SerializeToString,
            user_dot_user__pb2.FirstLoginStatsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QttFarmBindAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/QttFarmBindAccount',
            user_dot_user__pb2.QttFarmBindAccountArgs.SerializeToString,
            user_dot_user__pb2.QttFarmBindAccountResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetProfile',
            user_dot_user__pb2.GetProfileArgs.SerializeToString,
            user_dot_user__pb2.Profile.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileNickname(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateProfileNickname',
            user_dot_user__pb2.UpdateProfileNicknameArgs.SerializeToString,
            user_dot_user__pb2.UpdateProfileNicknameResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileAvatar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateProfileAvatar',
            user_dot_user__pb2.UpdateProfileAvatarArgs.SerializeToString,
            user_dot_user__pb2.UpdateProfileAvatarResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileGender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateProfileGender',
            user_dot_user__pb2.UpdateProfileGenderArgs.SerializeToString,
            user_dot_user__pb2.UpdateProfileGenderResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileBirthday(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateProfileBirthday',
            user_dot_user__pb2.UpdateProfileBirthdayArgs.SerializeToString,
            user_dot_user__pb2.UpdateProfileBirthdayResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileSignature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateProfileSignature',
            user_dot_user__pb2.UpdateProfileSignatureArgs.SerializeToString,
            user_dot_user__pb2.UpdateProfileSignatureResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProfileLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateProfileLocation',
            user_dot_user__pb2.UpdateProfileLocationArgs.SerializeToString,
            user_dot_user__pb2.UpdateProfileLocationResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWechatOpenid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetWechatOpenid',
            user_dot_user__pb2.GetWechatOpenidArgs.SerializeToString,
            user_dot_user__pb2.GetWechatOpenidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWechatOpenidByCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetWechatOpenidByCode',
            user_dot_user__pb2.GetWechatOpenidByCodeArgs.SerializeToString,
            user_dot_user__pb2.GetWechatOpenidByCodeResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckMPSubscribed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CheckMPSubscribed',
            user_dot_user__pb2.CheckMPSubscribedArgs.SerializeToString,
            user_dot_user__pb2.CheckMPSubscribedResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMPSubscribed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/SetMPSubscribed',
            user_dot_user__pb2.SetMPSubscribedArgs.SerializeToString,
            user_dot_user__pb2.SetMPSubscribedResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetQttMemberId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetQttMemberId',
            user_dot_user__pb2.GetQttMemberIdArgs.SerializeToString,
            user_dot_user__pb2.GetQttMemberIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyerIdFromQttToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetBuyerIdFromQttToken',
            user_dot_user__pb2.GetBuyerIdFromQttTokenArgs.SerializeToString,
            user_dot_user__pb2.GetBuyerIdFromQttTokenResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetQttInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetQttInfo',
            user_dot_user__pb2.GetQttInfoArgs.SerializeToString,
            user_dot_user__pb2.GetQttInfoResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAddresses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAddresses',
            user_dot_user__pb2.GetAddressesArgs.SerializeToString,
            user_dot_user__pb2.Addresses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAddress',
            user_dot_user__pb2.AddressIdArgs.SerializeToString,
            user_dot_user__pb2.Address.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultOrFirstAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetDefaultOrFirstAddress',
            user_dot_user__pb2.GetDefaultOrFirstAddressArgs.SerializeToString,
            user_dot_user__pb2.Address.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CreateAddress',
            user_dot_user__pb2.CreateAddressArgs.SerializeToString,
            user_dot_user__pb2.CreateAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateAddress',
            user_dot_user__pb2.UpdateAddressArgs.SerializeToString,
            user_dot_user__pb2.UpdateAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/DeleteAddress',
            user_dot_user__pb2.DeleteAddressArgs.SerializeToString,
            user_dot_user__pb2.DeleteAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAddressDefault(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/SetAddressDefault',
            user_dot_user__pb2.SetAddressDefaultArgs.SerializeToString,
            user_dot_user__pb2.SetAddressDefaultResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MirgateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/MirgateAddress',
            user_dot_user__pb2.MirgateAddressArgs.SerializeToString,
            user_dot_user__pb2.MirgateAddressResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFavoriteGoods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetFavoriteGoods',
            user_dot_user__pb2.GetFavoriteGoodsArgs.SerializeToString,
            user_dot_user__pb2.FavoriteGoodsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllFavoriteGoods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAllFavoriteGoods',
            user_dot_user__pb2.GetAllFavoriteGoodsArgs.SerializeToString,
            user_dot_user__pb2.GetAllFavoriteGoodsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddFavoriteGoods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/AddFavoriteGoods',
            user_dot_user__pb2.AddFavoriteGoodsArgs.SerializeToString,
            user_dot_user__pb2.AddFavoriteGoodsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchAddFavoriteGoods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BatchAddFavoriteGoods',
            user_dot_user__pb2.BatchAddFavoriteGoodsArgs.SerializeToString,
            user_dot_user__pb2.BatchAddFavoriteGoodsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveFavoriteGoods(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RemoveFavoriteGoods',
            user_dot_user__pb2.RemoveFavoriteGoodsArgs.SerializeToString,
            user_dot_user__pb2.RemoveFavoriteGoodsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFavoriteMall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetFavoriteMall',
            user_dot_user__pb2.GetFavoriteMallArgs.SerializeToString,
            user_dot_user__pb2.FavoriteMallResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllFavoriteMall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAllFavoriteMall',
            user_dot_user__pb2.GetAllFavoriteMallArgs.SerializeToString,
            user_dot_user__pb2.GetAllFavoriteMallResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddFavoriteMall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/AddFavoriteMall',
            user_dot_user__pb2.AddFavoriteMallArgs.SerializeToString,
            user_dot_user__pb2.AddFavoriteMallResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveFavoriteMall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RemoveFavoriteMall',
            user_dot_user__pb2.RemoveFavoriteMallArgs.SerializeToString,
            user_dot_user__pb2.RemoveFavoriteMallResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetMall',
            user_dot_user__pb2.GetMallArgs.SerializeToString,
            user_dot_user__pb2.Mall.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetCategory',
            user_dot_user__pb2.GetCategoryArgs.SerializeToString,
            user_dot_user__pb2.GetCategoryResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMallDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetMallDetail',
            user_dot_user__pb2.GetMallDetailArgs.SerializeToString,
            user_dot_user__pb2.GetMallDetailResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshMallDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RefreshMallDetail',
            user_dot_user__pb2.RefreshMallDetailReq.SerializeToString,
            user_dot_user__pb2.RefreshMallDetailResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshGetMall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RefreshGetMall',
            user_dot_user__pb2.RefreshGetMallReq.SerializeToString,
            user_dot_user__pb2.RefreshGetMallResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMallCategoryGoodsIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetMallCategoryGoodsIds',
            user_dot_user__pb2.GetMallCategoryGoodsIdsArgs.SerializeToString,
            user_dot_user__pb2.GetMallCategoryGoodsIdsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRefundAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetRefundAddress',
            user_dot_user__pb2.GetRefundAddressArgs.SerializeToString,
            user_dot_user__pb2.RefundAddress.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultOrFirstRefundAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetDefaultOrFirstRefundAddress',
            user_dot_user__pb2.GetDefaultOrFirstRefundAddressArgs.SerializeToString,
            user_dot_user__pb2.RefundAddress.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMallList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetMallList',
            user_dot_user__pb2.GetMallListArgs.SerializeToString,
            user_dot_user__pb2.GetMallListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSelfSupportMallIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAllSelfSupportMallIds',
            user_dot_user__pb2.GetAllSelfSupportMallIdsArgs.SerializeToString,
            user_dot_user__pb2.GetAllSelfSupportMallIdsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGoodMallIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetGoodMallIds',
            user_dot_user__pb2.GetGoodMallIdsArgs.SerializeToString,
            user_dot_user__pb2.GetGoodMallIdsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkMallDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BulkMallDetail',
            user_dot_user__pb2.BulkMallDetailArgs.SerializeToString,
            user_dot_user__pb2.BulkMallDetailResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGoodMallList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetGoodMallList',
            user_dot_user__pb2.GetGoodMallListArgs.SerializeToString,
            user_dot_user__pb2.GetGoodMallListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMallBrandLicense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetMallBrandLicense',
            user_dot_user__pb2.GetMallBrandLicenseArgs.SerializeToString,
            user_dot_user__pb2.GetMallBrandLicenseResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkMallLogo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BulkMallLogo',
            user_dot_user__pb2.BulkMallLogoArgs.SerializeToString,
            user_dot_user__pb2.BulkMallLogoResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkMallQuickRefund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BulkMallQuickRefund',
            user_dot_user__pb2.BulkMallQuickRefundArgs.SerializeToString,
            user_dot_user__pb2.BulkMallQuickRefundResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RegisterDevice',
            user_dot_user__pb2.RegisterDeviceArgs.SerializeToString,
            user_dot_user__pb2.RegisterDeviceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeviceIdCorrect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/DeviceIdCorrect',
            user_dot_user__pb2.DeviceIdCorrectArgs.SerializeToString,
            user_dot_user__pb2.DeviceIdCorrectResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindDeviceBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BindDeviceBuyer',
            user_dot_user__pb2.BindDeviceBuyerArgs.SerializeToString,
            user_dot_user__pb2.BindDeviceBuyerResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasBindDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/HasBindDevice',
            user_dot_user__pb2.HasBindDeviceArgs.SerializeToString,
            user_dot_user__pb2.HasBindDeviceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasBindDevice4Tuid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/HasBindDevice4Tuid',
            user_dot_user__pb2.HasBindDevice4TuidArgs.SerializeToString,
            user_dot_user__pb2.HasBindDevice4TuidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFirstDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetFirstDevice',
            user_dot_user__pb2.GetFirstDeviceArgs.SerializeToString,
            user_dot_user__pb2.GetFirstDeviceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PopulateDeviceSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/PopulateDeviceSource',
            user_dot_user__pb2.PopulateDeviceSourceArgs.SerializeToString,
            user_dot_user__pb2.PopulateDeviceSourceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PopulateDeviceImei(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/PopulateDeviceImei',
            user_dot_user__pb2.PopulateDeviceImeiArgs.SerializeToString,
            user_dot_user__pb2.PopulateDeviceImeiResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PopulateDeviceIdSupplier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/PopulateDeviceIdSupplier',
            user_dot_user__pb2.PopulateDeviceIdSupplierArgs.SerializeToString,
            user_dot_user__pb2.PopulateDeviceIdSupplierResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PopulateDeviceDtu(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/PopulateDeviceDtu',
            user_dot_user__pb2.PopulateDeviceDtuArgs.SerializeToString,
            user_dot_user__pb2.PopulateDeviceDtuResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetDeviceInfo',
            user_dot_user__pb2.GetDeviceInfoArgs.SerializeToString,
            user_dot_user__pb2.GetDeviceInfoResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetDeviceSource',
            user_dot_user__pb2.GetDeviceSourceArgs.SerializeToString,
            user_dot_user__pb2.GetDeviceSourceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDtuByDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetDtuByDevice',
            user_dot_user__pb2.GetDtuByDeviceArgs.SerializeToString,
            user_dot_user__pb2.GetDtuByDeviceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCidByTk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetCidByTk',
            user_dot_user__pb2.GetCidByTkArgs.SerializeToString,
            user_dot_user__pb2.GetCidByTkResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkBuyerAvatar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BulkBuyerAvatar',
            user_dot_user__pb2.BulkUserAvatarArgs.SerializeToString,
            user_dot_user__pb2.BulkUserAvatarResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetRobots',
            user_dot_user__pb2.GetRobotArgs.SerializeToString,
            user_dot_user__pb2.GetRobotResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSimpleRobots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetSimpleRobots',
            user_dot_user__pb2.GetSimpleRobotsArgs.SerializeToString,
            user_dot_user__pb2.GetSimpleRobotsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetRobotById',
            user_dot_user__pb2.GetRobotByIdArgs.SerializeToString,
            user_dot_user__pb2.GetRobotByIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRobotsAvatar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetRobotsAvatar',
            user_dot_user__pb2.GetRobotsAvatarArgs.SerializeToString,
            user_dot_user__pb2.GetRobotsAvatarResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PurgeBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/PurgeBuyer',
            user_dot_user__pb2.PurgeBuyerArgs.SerializeToString,
            user_dot_user__pb2.PurgeBuyerResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminPurgeBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/AdminPurgeBuyer',
            user_dot_user__pb2.AdminPurgeBuyerArgs.SerializeToString,
            user_dot_user__pb2.AdminPurgeBuyerResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AdminGetPurgeBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/AdminGetPurgeBuyer',
            user_dot_user__pb2.AdminGetPurgeBuyerArgs.SerializeToString,
            user_dot_user__pb2.AdminGetPurgeBuyerResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRegionsById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetRegionsById',
            user_dot_user__pb2.GetRegionsByIdArgs.SerializeToString,
            user_dot_user__pb2.GetRegionsByIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProvinceCityById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetProvinceCityById',
            user_dot_user__pb2.GetProvinceCityByIdArgs.SerializeToString,
            user_dot_user__pb2.GetProvinceCityByIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBindDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetBindDeviceInfo',
            user_dot_user__pb2.GetBindDeviceInfoArgs.SerializeToString,
            user_dot_user__pb2.GetBindDeviceInfoResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindDeviceTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BindDeviceTag',
            user_dot_user__pb2.BindDeviceTagArgs.SerializeToString,
            user_dot_user__pb2.BindDeviceTagResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BindBuyerTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/BindBuyerTag',
            user_dot_user__pb2.BindBuyerTagArgs.SerializeToString,
            user_dot_user__pb2.BindBuyerTagResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetTags',
            user_dot_user__pb2.GetTagsArgs.SerializeToString,
            user_dot_user__pb2.GetTagsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelBuyerTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/DelBuyerTags',
            user_dot_user__pb2.DelBuyerTagsArgs.SerializeToString,
            user_dot_user__pb2.DelBuyerTagsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelDeviceTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/DelDeviceTags',
            user_dot_user__pb2.DelDeviceTagsArgs.SerializeToString,
            user_dot_user__pb2.DelDeviceTagsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyerRealName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetBuyerRealName',
            user_dot_user__pb2.GetBuyerRealNameArgs.SerializeToString,
            user_dot_user__pb2.GetBuyerRealNameResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRealNameById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetRealNameById',
            user_dot_user__pb2.GetRealNameByIdArgs.SerializeToString,
            user_dot_user__pb2.GetRealNameByIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVerifiedById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateVerifiedById',
            user_dot_user__pb2.UpdateVerifiedByIdArgs.SerializeToString,
            user_dot_user__pb2.UpdateVerifiedByIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertRealName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/InsertRealName',
            user_dot_user__pb2.InsertRealNameArgs.SerializeToString,
            user_dot_user__pb2.InsertRealNameResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuyerCashCardList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetBuyerCashCardList',
            user_dot_user__pb2.GetBuyerCashCardListArgs.SerializeToString,
            user_dot_user__pb2.GetBuyerCashCardListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateCashCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/ActivateCashCard',
            user_dot_user__pb2.ActivateCashCardArgs.SerializeToString,
            user_dot_user__pb2.BuyerCashCard.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UseCashCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UseCashCard',
            user_dot_user__pb2.UseCashCardArgs.SerializeToString,
            user_dot_user__pb2.UseCashCardResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefundCashCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/RefundCashCard',
            user_dot_user__pb2.RefundCashCardArgs.SerializeToString,
            user_dot_user__pb2.RefundCashCardResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCashCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetCashCard',
            user_dot_user__pb2.GetCashCardArgs.SerializeToString,
            user_dot_user__pb2.BuyerCashCard.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CheckLocation',
            user_dot_user__pb2.CheckLocationArgs.SerializeToString,
            user_dot_user__pb2.CheckLocationResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserSuggestion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UserSuggestion',
            user_dot_user__pb2.UserSuggestionArgs.SerializeToString,
            user_dot_user__pb2.UserSuggestionResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchUsersSuggestion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/FetchUsersSuggestion',
            user_dot_user__pb2.FetchUserSuggestionArgs.SerializeToString,
            user_dot_user__pb2.FetchUserSuggestionResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def POIList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/POIList',
            user_dot_user__pb2.POIListArgs.SerializeToString,
            user_dot_user__pb2.POIListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserAddressLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUserAddressLocation',
            user_dot_user__pb2.GetUserAddressLocationArgs.SerializeToString,
            user_dot_user__pb2.GetUserAddressLocationResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserAddressLocationByAddrId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUserAddressLocationByAddrId',
            user_dot_user__pb2.GetUserAddressLocationByAddrIdArgs.SerializeToString,
            user_dot_user__pb2.GetUserAddressLocationResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GoodreviewReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GoodreviewReward',
            user_dot_user__pb2.GoodreviewRewardArgs.SerializeToString,
            user_dot_user__pb2.GoodreviewRewardResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserPropCategoryList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUserPropCategoryList',
            user_dot_user__pb2.GetUsePropCategoryListArgs.SerializeToString,
            user_dot_user__pb2.GetUsePropCategoryListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserSwitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/SetUserSwitch',
            user_dot_user__pb2.SetUserSwitchArgs.SerializeToString,
            user_dot_user__pb2.SetUserSwitchResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserSwitch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUserSwitch',
            user_dot_user__pb2.GetUserSwitchArgs.SerializeToString,
            user_dot_user__pb2.GetUserSwitchResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserSwitches(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUserSwitches',
            user_dot_user__pb2.GetUserSwitchesArgs.SerializeToString,
            user_dot_user__pb2.GetUserSwitchesResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MirgateUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/MirgateUserData',
            user_dot_user__pb2.MirgateUserDataArgs.SerializeToString,
            user_dot_user__pb2.EmptyResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteQttAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/DeleteQttAuth',
            user_dot_user__pb2.DeleteQttAuthArgs.SerializeToString,
            user_dot_user__pb2.DeleteQttAuthResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsUserInEvaluateBlackList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/IsUserInEvaluateBlackList',
            user_dot_user__pb2.IsUserInEvaluateBlackListArgs.SerializeToString,
            user_dot_user__pb2.IsUserInEvaluateBlackListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserCenterFilterVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UserCenterFilterVariable',
            user_dot_user__pb2.UserCenterFilterVariableArgs.SerializeToString,
            user_dot_user__pb2.UserCenterFilterVariableResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TkCenterFilterVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/TkCenterFilterVariable',
            user_dot_user__pb2.TkCenterFilterVariableArgs.SerializeToString,
            user_dot_user__pb2.TkCenterFilterVariableResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnionId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUnionId',
            user_dot_user__pb2.GetUnionIdArgs.SerializeToString,
            user_dot_user__pb2.GetUnionIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBuyerOpenIdWithoutCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/ListBuyerOpenIdWithoutCache',
            user_dot_user__pb2.ListBuyerOpenIdWithoutCacheArgs.SerializeToString,
            user_dot_user__pb2.ListBuyerOpenIdWithoutCacheResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBuyerWechatAuthWithoutCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/ListBuyerWechatAuthWithoutCache',
            user_dot_user__pb2.ListBuyerWechatAuthWithoutCacheArgs.SerializeToString,
            user_dot_user__pb2.ListBuyerWechatAuthWithoutCacheResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IncrSwitchTimes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/IncrSwitchTimes',
            user_dot_user__pb2.IncrSwitchTimesArgs.SerializeToString,
            user_dot_user__pb2.IncrSwitchTimesResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUserFuncOpen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CheckUserFuncOpen',
            user_dot_user__pb2.CheckUserFuncOpenArgs.SerializeToString,
            user_dot_user__pb2.CheckUserFuncOpenResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserByMobile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetUserByMobile',
            user_dot_user__pb2.GetUserByMobileArgs.SerializeToString,
            user_dot_user__pb2.GetUserByMobileResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAppConfig',
            user_dot_user__pb2.GetAppConfigArgs.SerializeToString,
            user_dot_user__pb2.AppConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTestFlight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetTestFlight',
            user_dot_user__pb2.GetTestFlightArgs.SerializeToString,
            user_dot_user__pb2.GetTestFlightResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetAppConfigs',
            user_dot_user__pb2.GetAppConfigsArgs.SerializeToString,
            user_dot_user__pb2.GetAppConfigsResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAppConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/AddAppConfig',
            user_dot_user__pb2.AddAppConfigArgs.SerializeToString,
            user_dot_user__pb2.AppConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetH5Resource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetH5Resource',
            user_dot_user__pb2.GetH5ResourceArgs.SerializeToString,
            user_dot_user__pb2.GetH5ResourceResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAppConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UpdateAppConfig',
            user_dot_user__pb2.UpdateAppConfigArgs.SerializeToString,
            user_dot_user__pb2.UpdateConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserPrivilege(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/SetUserPrivilege',
            user_dot_user__pb2.SetUserPrivilegeArgs.SerializeToString,
            user_dot_user__pb2.SetUserPrivilegeResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserWXTransferCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UserWXTransferCheck',
            user_dot_user__pb2.UserWXTransferCheckReq.SerializeToString,
            user_dot_user__pb2.UserWXTransferCheckResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserWXTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/UserWXTransfer',
            user_dot_user__pb2.UserWXTransferReq.SerializeToString,
            user_dot_user__pb2.UserWXTransferResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsAdsBlackList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/IsAdsBlackList',
            user_dot_user__pb2.IsAdsBlackListArgs.SerializeToString,
            user_dot_user__pb2.IsAdsBlackListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUserCanTake(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/CheckUserCanTake',
            user_dot_user__pb2.CheckUserCanTakeArgs.SerializeToString,
            user_dot_user__pb2.CheckUserCanTakeResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHotFixConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetHotFixConfig',
            user_dot_user__pb2.GetHotFixConfigArgs.SerializeToString,
            user_dot_user__pb2.GetHotFixConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LatestUidFromTuid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/LatestUidFromTuid',
            user_dot_user__pb2.LatestUidFromTuidArgs.SerializeToString,
            user_dot_user__pb2.LatestUidFromTuidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceIdentityByBuyerId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetDeviceIdentityByBuyerId',
            user_dot_user__pb2.GetDeviceIdentityByBuyerIdArgs.SerializeToString,
            user_dot_user__pb2.GetDeviceIdentityByBuyerIdResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EncodeEpidByClientAndOpenid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/EncodeEpidByClientAndOpenid',
            user_dot_user__pb2.EncodeEpidByClientAndOpenidArgs.SerializeToString,
            user_dot_user__pb2.EncodeEpidByClientAndOpenidResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSRSuggest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/GetSRSuggest',
            user_dot_user__pb2.GetSRSuggestArgs.SerializeToString,
            user_dot_user__pb2.GetSRSuggestResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSRSuggest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ptuser.Service/SetSRSuggest',
            user_dot_user__pb2.SetSRSuggestArgs.SerializeToString,
            user_dot_user__pb2.SetSRSuggestResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
